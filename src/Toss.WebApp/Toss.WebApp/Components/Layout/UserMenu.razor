@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authentication.OpenIdConnect;
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication
@using Toss.WebApp.Services
@inject LogOutService LogOutService
@inject NavigationManager Nav

<AuthorizeView>
    <Authorized>
        <div class="dropdown-menu">
            <p><span class="dropdown-button"><i class="material-symbols-rounded opacity-6 me-2 text-md">Contacts</i>@context.User.Identity?.Name</span></p>
            <div class="dropdown-content">                
                <form class="dropdown-item" method="post" action="user/logout" @formname="logout" @onsubmit="LogOutAsync">
                    <AntiforgeryToken />
                    <button type="submit">
                        Log out
                    </button>
                </form>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <ul class="navbar-nav navbar-nav-hover mx-auto">
            <li class="nav-item dropdown dropdown-hover mx-1">
                <a href="Account/Register" class="font-weight-semibold nav-link ps-2 d-flex cursor-pointer align-items-center d-lg-block d-none">
                    <i class="material-symbols-rounded opacity-6 me-2 text-md">contacts</i>
                    Register
                </a>
            </li>
            <li class="nav-item">
                <a href="Account/Login" class="btn  btn-dark  mb-0 d-lg-block d-none" onclick="smoothToPricing('pricing-soft-ui')">Sign In</a>
            </li>
        </ul>
        @* <a aria-label="Sign in" href="@Pages.User.LogIn.Url(Nav)"><img role="presentation" src="icons/user.svg" /></a> *@
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    private Task LogOutAsync()
        => LogOutService.LogOutAsync(HttpContext!);
}
